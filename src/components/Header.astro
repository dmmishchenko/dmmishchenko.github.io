---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
  <nav>
    <h2><a href="/">{SITE_TITLE}</a></h2>
    <div class="internal-links">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/blog">Blog</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
    </div>
    <div class="theme-controls">
      <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
        <svg
          class="sun-icon"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <circle cx="12" cy="12" r="5"></circle>
          <line x1="12" y1="1" x2="12" y2="3"></line>
          <line x1="12" y1="21" x2="12" y2="23"></line>
          <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
          <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
          <line x1="1" y1="12" x2="3" y2="12"></line>
          <line x1="21" y1="12" x2="23" y2="12"></line>
          <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
          <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
        <svg
          class="moon-icon"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
      </button>
    </div>
  </nav>
</header>

<style>
  header {
    margin: 0;
    padding: 0 1em;
    background: var(--gray-gradient);
    box-shadow: var(--box-shadow);
  }
  h2 {
    margin: 0;
    font-size: 1em;
  }

  h2 a,
  h2 a.active {
    text-decoration: none;
  }
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  nav a {
    padding: 1em 0.5em;
    color: rgb(var(--black));
    border-bottom: 4px solid transparent;
    text-decoration: none;

    @media (max-width: 720px) {
      padding: 0.5em;
    }
  }
  nav a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }

  .theme-controls {
    display: flex;
    align-items: center;
  }

  .theme-toggle {
    padding: 0;
    background: none;
    border: none;
    cursor: pointer;
    color: rgb(var(--black));
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .theme-toggle:hover {
    color: var(--accent);
  }

  .sun-icon,
  .moon-icon {
    width: 24px;
    height: 24px;
  }

  @media (prefers-color-scheme: dark) {
    .sun-icon {
      display: block;
    }
    .moon-icon {
      display: none;
    }
  }

  @media (prefers-color-scheme: light) {
    .sun-icon {
      display: none;
    }
    .moon-icon {
      display: block;
    }
  }
</style>

<script>
  // Check if the browser supports color-scheme
  const prefersColorScheme = window.matchMedia("(prefers-color-scheme: dark)");
  let isDarkMode = prefersColorScheme.matches;

  // Function to toggle icons based on color scheme
  const toggleIcons = (isDark: boolean) => {
    const sunIcon = document.querySelector(".sun-icon") as HTMLElement;
    const moonIcon = document.querySelector(".moon-icon") as HTMLElement;
    if (sunIcon && moonIcon) {
      sunIcon.style.display = isDark ? "block" : "none";
      moonIcon.style.display = isDark ? "none" : "block";
    }
  };

  // Listen for system color scheme changes
  prefersColorScheme.addEventListener("change", (e) => {
    isDarkMode = e.matches;
    toggleIcons(isDarkMode);
  });

  // Handle manual theme toggle
  document.getElementById("theme-toggle")?.addEventListener("click", () => {
    isDarkMode = !isDarkMode;
    document.documentElement.style.colorScheme = isDarkMode ? "dark" : "light";
    toggleIcons(isDarkMode);
  });

  // Initial state
  toggleIcons(isDarkMode);
</script>
